#######################################################################################
## Author: Anagha Uppal
## Date: Nov 2020-Nov 2021
## Purpose: Setup for SES Paper
## Inputs: 
## Outputs: 
#######################################################################################
## To do: 

library(caret)
library(leaps)
library(tidyverse)
library(MASS)
library(GGally)
library(bootStepAIC)
library(plotly)
library(mlbench)
library(lubridate) # dates
library(safejoin)
library(dplyr)
library(lubridate)
library(tidyverse)
library(broom)
library(reghelper)
library(effectsize)


# Grab the data
participants <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/GHData_AU_20201221.csv")
participants <- participants[-213,]
shemp <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/GH_shemp_variable.csv")

greenness <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/participants_allgreenness_20210214.csv")
greenness <- greenness[-256,]
datacanopy2 <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/participants_allgreenness_20210809.csv")[, c(5, 178:199)]
datacanopy2 <- datacanopy2[-256,]

dataadd <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/GHDataAdd_RY_20210727.csv")[, c(5, 178:199)]

trafficdata1 <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/HEAL_addTrafficGISData_AU_20210224.csv")
trafficdata2 <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/HEAL_addTrafficGISData_AU_20210304.csv")
trafficdata3 <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/HEAL_addTrafficExposure_AU_20210630.csv")
trafficdata3$StudyID <- trafficdata3$Ã¯..StudyID

addtm <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/addtm_column.csv")
climatedata <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/HEAL_climate_data_DR_062821.csv")

addcols <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/GHDataAdd_RY_20210628.csv")
expdata <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/GHDataAdd_RY_20210727.csv")
rentown_new <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/GHParticipants_newrentown.csv")
rentown_new <- rentown_new %>%
  mutate(propval_cat = ntile(CUR_TOTAL, 3)) %>%
  mutate(propval_cat = if_else(propval_cat == 1, 'Low', if_else(propval_cat == 2, 'Medium', 'High'))) %>%
  arrange(propval_cat)
# climatedata[duplicated(climatedata$stid), ]

SVI <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/ghgeocodes_SVI.csv")

participants <- participants %>%
  mutate(gend.desc = as.factor(if_else(gend == 1, 'Female', 'Male'))) %>%
  mutate(race.desc = as.factor(if_else(race == 3, 'Black', 
                                       if_else(race == 5, 'White', 'Other')))) %>% 
  mutate(ethn.desc = as.factor(if_else(ethn == 1, 'Hispanic/Latino', 'Non Hispanic/Latino'))) %>%
  #mutate(shemp.desc = as.factor(if_else(shemp == 1, 'Yes', 'No'))) %>%
  mutate(inc.desc = as.factor(if_else(inc == 1, '< $20,000', 
                                      if_else(inc == 2, '20,000-$45,000', 
                                              if_else(inc == 3, '$45,000-$65,000',
                                                      if_else(inc==4 | inc==5 | inc==6, '>$65,000', NULL)))))) %>%
  mutate(inc.desc2 = 
           case_when(
             inc.desc == "< $20,000" | inc.desc == "20,000-$45,000" ~ "Low",
             inc.desc == "$45,000-$65,000" | inc.desc == ">$65,000" ~ "High",
             TRUE ~ NA_character_,)) %>%
  mutate(edu.desc = as.factor(if_else(edu>=1 & edu<=3, '<=High School Diploma',
                                      if_else(edu==4 | edu==5, 'Some college',
                                              if_else(edu>=6 & edu<=8, '>=4-year degree', NULL))))) %>%
  mutate(edu.desc2 = as.factor(if_else(edu>=1 & edu<=3, '<=High School Diploma',
                                      if_else(edu>=4 & edu<=8, 
                                              'Some college or more', NULL)))) %>%
  mutate(edu.desc3 = as.factor(if_else(edu>=1 & edu<=2, '<=High School Diploma',
                                       if_else(edu>=3 & edu<=8, 
                                               'HS or more', NULL)))) %>%
  mutate(medu.desc = as.factor(if_else(medu>=1 & medu<=3, '<=High School Diploma',
                                       if_else(medu==4 | medu==5, 'Some college',
                                               if_else(medu>=6 & medu<=8, '>=4-year degree', NULL))))) %>%
  mutate(medu.desc2 = as.factor(if_else(medu>=1 & medu<=2, '<=High School Diploma',
                                       if_else(medu>=3 & medu<=8, 
                                               'Some college or more', NULL)))) %>%
  mutate(rentown.desc = as.factor(if_else(rentown == 1, 'Rent', 'Own'))) %>%
  mutate(bc.desc = as.factor(if_else(bc>=1 & bc<=4, 'Single home or duplex',
                                     if_else(bc==5 | bc==6, 'Apartment', NULL)))) %>%
  mutate(hznum.desc = as.factor(if_else(hznum==1 | hznum==2, 'Small',
                                        if_else(hznum>=3 & hznum<=5, 'Medium',
                                                if_else(hznum>=6, 'Large', NULL))))) %>%
  mutate(exr.desc = as.factor(if_else(exr == 1, 'Yes', 
                                      if_else(exr == 2, 'No', NULL)))) %>%
  mutate(obese.desc = as.factor(if_else(bmi >= 30, 'Yes', 
                                        if_else(bmi < 30, 'No', NULL)))) %>%
  mutate(cope.desc = as.factor(if_else(cope == 0, 'Never', 
                                      if_else(cope == 1, 'Almost never', 
                                              if_else(cope == 2, 'Sometimes',
                                                      if_else(cope==3 | cope==4, 'Fairly Often or Often', NULL))))) %>%
    fct_relevel(c("Never", "Almost never", "Sometimes", "Fairly Often or Often"))) %>%
  mutate(etoh1.desc = as.factor(if_else(etoh1 == 1 | etoh1 == 2, 'Less than monthly', 
                                       if_else(etoh1 == 3, '2 to 4 times a month', 
                                               if_else(etoh1 == 4, '2 to 3 times a week',
                                                       if_else(etoh1==5, '4 or more times a week', NULL))))) %>%
    fct_relevel(c("Less than monthly", "2 to 4 times a month", "2 to 3 times a week", "4 or more times a week"))) %>%
  mutate(lip.desc = as.factor(if_else(lip == 2 | lip == 3, 'No', 
                                      if_else(lip == 1, 'Yes', NULL)))) %>%
  mutate(nowsmk.desc = as.factor(if_else(u_cot_n > 40, 'Yes', 'No'))) %>%
  #mutate(eh10.desc = as.factor(if_else(eh10 == 1, 'Yes', 'No'))) %>%
  #mutate(nhlp.desc = as.factor(if_else(nhlp==3 | nhlp==4, 'Yes', 'No'))) %>%
  #mutate(nwtch.desc = as.factor(if_else(nwtch==3 | nwtch==4, 'Yes', 'No'))) %>%
  #mutate(crsit.desc = as.factor(if_else(crsit==3 | crsit==4, 'Yes', 'No'))) %>%
  mutate(sdwlk.desc = as.factor(if_else(sdwlk==3 | sdwlk==4, 'Yes', 'No'))) %>%
  #mutate(illbhv.desc = as.factor(if_else(illbhv==3 | illbhv==4, 'Yes', 'No'))) %>%
  mutate(litt.desc = as.factor(if_else(litt==3 | litt==4, 'Yes', 'No'))) %>%
  mutate(saf1.desc = as.factor(if_else(saf1==1 | saf1==2, 'Yes', 'No'))) %>%
  mutate(saf2.desc = as.factor(if_else(saf2==1 | saf2==2, 'Yes', 'No'))) %>%
  mutate(saf3.desc = as.factor(if_else(saf3==1 | saf3==2, 'Yes', 'No'))) %>%
  mutate(NEAR_DIST_MajorRoads = NEAR_DIST_MajorRoads/3281) %>%
  mutate(ace.desc = as.factor(if_else(ace == 0, 'No', 
                                        if_else(ace == 1, 'Yes', NULL)))) %>%
  mutate(diur.desc = as.factor(if_else(diur == 0, 'No', 
                                      if_else(diur == 1, 'Yes', NULL)))) %>%
  mutate(htn2 = as.factor(if_else(htn == 1, 'Yes', 'No'))) %>%
  mutate(htn3 = as.factor(if_else(htn == 1, 'Yes', 
                                  if_else(htn == 2, 'No', NULL)))) %>%
  mutate(wkout.desc = as.factor(if_else(wkout <= 5, 'Low',
                                        if_else(wkout> 5 & wkout<=10, 'Medium',
                                                if_else(wkout > 10, 'High', NULL))))) %>%
  mutate(dm.desc = as.factor(if_else(dm == 1, 'Yes', 
                                     if_else(dm == 2, 'No', NULL)))) %>%
  mutate(dmorHbA1c = as.factor(if_else(dm == 1, "Yes",
                                       if_else(dm == 2, "No",
                                               if_else((dm == 3 | dm == 4) & HbA1c > 6.5, "Yes", "No"))))) %>%
  mutate(htn4 = as.factor(if_else(htn == 1, "Yes",
                                  if_else(htn == 2, "No",
                                          if_else((htn == 3 | htn == 4) & sbpavg > 140, "Yes", "No"))))) %>%
  mutate(anyDiurACECCB = as.factor(if_else(diur == 1 | psdiur == 1 | ace == 1 | ccb == 1, "Yes", "No"))) %>%
  mutate(MAP = (0.333*sbpavg)+(0.6666*dbpavg)) %>%
  mutate(wrkarea.desc = 
           case_when(
             wrkarea == 1 ~ "Outdoors",
             wrkarea == 2 ~ "Travel",
             wrkarea ==3 ~ "Drive",
             wrkarea == 4 ~ "Other",
             wrkarea == 7 ~ "Indoors",
             wrkarea == 8 ~ "Unemployed",
             TRUE ~ NA_character_,
           )) %>%
  mutate(wrkarea.desc2 = 
           case_when(
             wrkarea == 1 | wrkarea == 2 | wrkarea == 3 | wrkarea == 4 | wrkarea == 7  ~ "Employed",
             wrkarea == 8 ~ "Unemployed",
             TRUE ~ NA_character_,
           ))

shemp <- shemp %>%
  mutate(employed.desc = as.factor(if_else(shemp == 1, "Yes",
                                       if_else(shemp == 0, "No",NA_character_))))

participant_greenness  <- left_join(participants, greenness, by=c("stid"="StudyID"))
participant_greenness <- safe_left_join(participant_greenness, datacanopy2, by=c("stid" = "StudyID"),
                                        conflict = coalesce)
participant_greenness$de <- as.Date(mdy(participant_greenness$de))
participant_greenness <- left_join(participant_greenness, shemp, by=c("stid"="stid"))
participant_greenness  <- left_join(participant_greenness, trafficdata1, by=c("stid"="StudyID"))
participant_greenness  <- safe_left_join(participant_greenness, trafficdata2, by=c("stid"="StudyID"),
                                         conflict = coalesce)
participant_greenness$Roadlength[is.na(participant_greenness$Roadlength)] = 0
participant_greenness$RoadlengthtimesTraffic[is.na(participant_greenness$RoadlengthtimesTraffic)] = 0
participant_greenness  <- left_join(participant_greenness, trafficdata3, by=c("stid"="StudyID"))

participant_greenness  <- left_join(participant_greenness, addtm, by=c("stid"="stid"))
#participant_greenness  <- left_join(participant_greenness, addcols, by=c("stid"="stid"))
participant_greenness  <- safe_left_join(participant_greenness, expdata, by=c("stid"="stid"),
                                         conflict = coalesce)
participant_greenness  <- left_join(participant_greenness, climatedata, by=c("stid"="stid"))
participant_greenness  <- left_join(participant_greenness, rentown_new, by=c("stid"="StudyID"))
# participant_greenness[,261:262] <- sapply(participant_greenness[,261:262],as.numeric) # u_mu
participant_greenness  <- safe_left_join(participant_greenness, SVI, by=c("stid"="StudyID"),
                                         conflict = coalesce)


participant_greenness <- participant_greenness %>% 
  mutate(chem_fume_expos = as.factor(if_else(chem == 1 | fume == 1, 'Yes', 'No')))
participant_greenness$rentown_parcel[participant_greenness$rentown_parcel == ""] <- NA

participant_greenness$inc.desc <- factor(participant_greenness$inc.desc, levels = c("< $20,000", "20,000-$45,000", "$45,000-$65,000", ">$65,000"))
participant_greenness$inc.desc2 <- factor(participant_greenness$inc.desc2, levels = c("Low", "High"))
participant_greenness$edu.desc <- factor(participant_greenness$edu.desc, levels = c('<=High School Diploma', "Some college", ">=4-year degree"))
participant_greenness$medu.desc <- factor(participant_greenness$medu.desc, levels = c('<=High School Diploma', "Some college", ">=4-year degree"))
participant_greenness$hznum.desc <- factor(participant_greenness$hznum.desc, levels = c("Small", "Medium", "Large"))
participant_greenness$wkout.desc <- factor(participant_greenness$wkout.desc, levels = c("Low", "Medium", "High"))
participant_greenness$propval_cat <- factor(participant_greenness$propval_cat, levels = c("Low", "Medium", "High"))
participant_greenness$wrkarea.desc <- factor(participant_greenness$wrkarea.desc, levels = c("Indoors", "Outdoors", "Drive", "Travel",
                                                                                            "Unemployed", "Other"))
participant_greenness <- participant_greenness %>%
  mutate(NDVIcat = ntile(Participant_200m_Mean_ndvi, 3)) %>%
  mutate(NDVIcat = if_else(NDVIcat == 1, 'Low', 
                           if_else(NDVIcat == 2, 'Medium', 'High'))) %>%
  mutate(NDVIcat = factor(NDVIcat) %>% fct_relevel(c("Low", "Medium", "High")))

participant_greenness <- participant_greenness %>%
  mutate(SPL_THEMES_cat = ntile(SPL_THEMES, 2)) %>%
  mutate(SPL_THEMES_cat = if_else(SPL_THEMES_cat == 1, 'Low', 'High')) %>%
  mutate(SPL_THEMES_cat = factor(SPL_THEMES_cat) %>% fct_relevel(c("Low", "High")))

participant_greenness = participant_greenness %>% select(-starts_with("HEAL"),
                                 -starts_with("Heal"),
                                 -starts_with("FocalStatistics"),
                                 -starts_with("Andrea"),
                                 -starts_with("ghKDE"),
                                 -starts_with("ParcelID"),
                                 -starts_with("FIPS"),
                                 -starts_with("Mean_"),
                                 -starts_with("Sum_"))

nonsmokers <- participant_greenness %>% filter(nowsmk.desc=="No")
smokers <- participant_greenness %>% filter(nowsmk.desc=="Yes")

############################################################


#######################################################################################
## Author: Anagha Uppal
## Date: Nov 2020-Nov 2021
## Purpose: Table 1 for SES Paper
## Inputs: participants, greenness
## Outputs: tables
#######################################################################################
## To do: 

## Install packages
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("dplyr")) install.packages("dplyr")
if (!require("gtsummary")) install.packages("gtsummary")
if (!require("purrr")) install.packages("purrr")
if (!require("tidyverse")) install.packages("tidyverse")

library(ggplot2) # for plotting
library(dplyr) # for data cleaning
library(gtsummary) # for pub-ready tables
library(purrr)
library(tidyverse)
library(rcompanion)
library(corrr) # 
library(devtools)

######################PREP##################################
# Input data file locations
participants <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/GHData_AU_20201221.csv")
bgdems <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/GHParticipants_bg.csv")
greenness <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participants_allgreenness_20210309.csv")

## clean participants table to be usable
# this creates columns to convert numeric categories to their meaningful counterparts
participants <- participants %>%
  mutate(gend.desc = as.factor(if_else(gend == 1, 'Female', 'Male'))) %>%
  mutate(race.desc = as.factor(if_else(race == 3, 'Black', 
                                       if_else(race == 5, 'White', 'Other')))) %>% 
  mutate(ethn.desc = as.factor(if_else(ethn == 1, 'Hispanic/Latino', 'Non Hispanic/Latino'))) %>%
  mutate(ethn.desc = as.factor(if_else(ethn == 1, 'Hispanic/Latino', 'Non Hispanic/Latino'))) %>%
  #mutate(shemp.desc = as.factor(if_else(shemp == 1, 'Yes', 'No'))) %>%
  mutate(inc.desc = as.factor(if_else(inc == 1, '< $20,000', 
                                      if_else(inc == 2, '20,000-$45,000', 
                                              if_else(inc == 3, '$45,000-$65,000',
                                                      if_else(inc==4 | inc==5 | inc==6, '>$65,000', NULL)))))) %>%
  mutate(edu.desc = as.factor(if_else(edu>=1 & edu<=3, '<=High School Diploma',
                                      if_else(edu==4 | edu==5, 'Some college',
                                              if_else(edu>=6 & edu<=8, '>=4-year degree', NULL))))) %>%
  mutate(medu.desc = as.factor(if_else(medu>=1 & medu<=3, '<=High School Diploma',
                                       if_else(medu==4 | medu==5, 'Some college',
                                               if_else(medu>=6 & medu<=8, '>=4-year degree', NULL))))) %>%
  mutate(rentown.desc = as.factor(if_else(rentown == 1, 'Rent', 'Own'))) %>%
  mutate(bc.desc = as.factor(if_else(bc>=1 & bc<=4, 'Single home or duplex',
                                     if_else(bc==5 | bc==6, 'Apartment', NULL)))) %>%
  mutate(hznum.desc = as.factor(if_else(hznum==1 | hznum==2, 'Small',
                                        if_else(hznum>=3 & hznum<=5, 'Medium',
                                                if_else(hznum>=6, 'Large', NULL))))) %>%
  mutate(exr.desc = as.factor(if_else(exr == 1, 'Yes', 
                                      if_else(exr == 2, 'No', NULL)))) %>%
  mutate(obese.desc = as.factor(if_else(bmi >= 30, 'Yes', 
                                        if_else(bmi < 30, 'No', NULL)))) %>%
  mutate(dm.desc = as.factor(if_else(dm == 1, 'Yes', 
                                     if_else(dm == 2, 'No', NULL)))) %>%
  mutate(nowsmk.desc = as.factor(if_else(u_cot_n > 40, 'Yes', 'No'))) %>%
  #mutate(eh10.desc = as.factor(if_else(eh10 == 1, 'Yes', 'No'))) %>%
  #mutate(nhlp.desc = as.factor(if_else(nhlp==3 | nhlp==4, 'Yes', 'No'))) %>%
  #mutate(nwtch.desc = as.factor(if_else(nwtch==3 | nwtch==4, 'Yes', 'No'))) %>%
  #mutate(crsit.desc = as.factor(if_else(crsit==3 | crsit==4, 'Yes', 'No'))) %>%
  mutate(sdwlk.desc = as.factor(if_else(sdwlk==3 | sdwlk==4, 'Yes', 'No'))) %>%
  #mutate(illbhv.desc = as.factor(if_else(illbhv==3 | illbhv==4, 'Yes', 'No'))) %>%
  mutate(litt.desc = as.factor(if_else(litt==3 | litt==4, 'Yes', 'No'))) %>%
  mutate(saf1.desc = as.factor(if_else(saf1==1 | saf1==2, 'Yes', 'No'))) %>%
  mutate(saf2.desc = as.factor(if_else(saf2==1 | saf2==2, 'Yes', 'No'))) %>%
  mutate(saf3.desc = as.factor(if_else(saf3==1 | saf3==2, 'Yes', 'No'))) %>%
  mutate(NEAR_DIST_MajorRoads = NEAR_DIST_MajorRoads/3281)

## clean greenness table to be usable
# this divides numeric NDVI into low/med/high categorical 
greenness <- greenness %>%
  mutate(NDVIcat = ntile(Participant_200m_Mean_ndvi, 3)) %>%
  mutate(NDVIcat = if_else(NDVIcat == 1, 'Low', 
                           if_else(NDVIcat == 2, 'Medium', 'High'))) %>%
  mutate(NDVIcat = factor(NDVIcat) %>% fct_relevel(c("High", "Medium", "Low")))

SVI <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/ghgeocodes_SVI.csv")


# join greenness values to participants
participant_greenness  <- left_join(participants, greenness, by=c("stid"="StudyID"))
participant_greenness  <- safe_left_join(participant_greenness, SVI, by=c("stid"="StudyID"),
                                         conflict = coalesce)
############################################################



######################TABLE 1##################################

## pull from the participants greenness tables those columns you'll use for table 1 (dems)
pg_SES <- participant_greenness %>% select(gend.desc,race.desc,ethn.desc,
                                           inc.desc,
                                           edu.desc,
                                           #medu.desc,
                                           wrkarea.desc2,
                                           hznum.desc,
                                           exr.desc,
                                           dm.desc,
                                           rentown.desc,bc.desc,
                                           nowsmk.desc,
                                           #nhlp.desc,nwtch.desc,illbhv.desc,crsit.desc,eh10.desc,shemp.desc,
                                           #litt.desc,
                                           #sdwlk.desc,
                                           #saf1.desc,saf2.desc,saf3.desc,
                                           cope.desc,etoh1.desc,lip.desc,
                                           age,bmi,
                                           sbpavg,dbpavg,
                                           NEAR_DIST_MajorRoads,
                                           #LASTCNT_MajorRoadsTraffic,
                                           PopDen,
                                           NDVIcat, 
                                           SPL_THEMES,
                                           #RPL_THEMES,
                                           #biomasscat,laicat,leafcat,parcellaicat,
                                           #parcelcat,nobuildingcat,lessvcat,morevcat
                                           )

## tbl_summary (from gtsummary is used)
## to create pub-ready tables
# Use gtsummary vignettes to explore and edit the parameters
setwd("C:/Users/a0uppa01/University of Louisville/Envirome Institute members_group - General/GIS/GreenHeart/DataOutputsandDeliverables/SES Paper/FinalTables")
set_gtsummary_theme(theme_gtsummary_compact())
# theme_gtsummary_journal(journal = "jama")
#reset_gtsummary_theme()
pg_SES %>% tbl_summary(by = NDVIcat,
                       statistic = list(all_continuous() ~ "{mean} ({sd})",
                                        all_categorical() ~ "{n} / {N} ({p}%)"),
                       digits = all_continuous() ~ 2,
                       label = list(race.desc ~ "Race", gend.desc ~ "Gender", 
                                    ethn.desc ~ "Ethnicity", exr.desc ~ "Exercise",
                                    age ~ "Age",
                                    dm.desc ~ "Diabetes",
                                    bmi ~ "BMI",
                                    sbpavg ~ "Systolic BP", 
                                    dbpavg ~ "Diastolic BP",
                                    inc.desc ~ "Income", edu.desc ~ "Education",
                                    #medu.desc ~ "Mother's education",
                                    wrkarea.desc2 ~ "Employment",
                                    nowsmk.desc ~ "Current smoker",
                                    hznum.desc ~ "Household size",
                                    bc.desc ~ "Building type", 
                                    #shemp.desc ~ "Currently employed?",
                                    # eh10.desc ~ "Food source not grocery store",
                                    #nhlp.desc ~ "Caretaking neighbors",
                                    #nwtch.desc ~ "Concerned neighbors",
                                    #crsit.desc ~ "Bad traffic conditions",
                                    #sdwlk.desc ~ "Poorly maintained sidewalks",
                                    #litt.desc ~ "Trash/litter presence",
                                    #illbhv.desc ~ "Disruptive neighbors",
                                    #saf1.desc ~ "Safe to walk neigborhood",
                                    #saf2.desc ~ "No violence in neighborhood",
                                    #saf3.desc ~ "No crime in neighborhood",
                                    cope.desc ~ "Stress levels",
                                    etoh1.desc ~ "Alcohol consumption",
                                    lip.desc ~ "High cholesterol",
                                    rentown.desc ~ "Rent or own home",
                                    NEAR_DIST_MajorRoads ~ "Distance to major road",
                                    #LASTCNT_MajorRoadsTraffic ~ "Traffic count",
                                    PopDen ~ "Area Population density",
                                    SPL_THEMES ~ "Social Vulnerability Index"
                                    ),
                       missing = "no", #can switch to ifany
                       missing_text = "(Missing)") %>% 
  modify_header(label ~ "**Variable**") %>%
  # modify_footnote(everything() ~ "Abbreviations") %>%
  modify_spanning_header(c("stat_1", "stat_2", "stat_3") ~ "**NDVI**") %>%
  add_p(pvalue_fun = ~style_pvalue(.x, digits = 2)) %>% 
  bold_labels() %>% add_overall() %>% bold_p() %>%
  as_gt() %>%             # convert to gt table
  gt::gtsave(             # save table as image
    filename = "HTNtable1.png",
    expand = 1,
  )


############################################################

------------Remaining tables

library(tidyverse)
library(broom)
library(reghelper)
library(effectsize)


write.table(colnames(participant_greenness),file = "C:/Users/a0uppa01/Documents/GIS/pgcolnames.csv")
bc_home <- participant_greenness %>% filter(bc.desc == "Single home or duplex")
bc_home_filtered <- bc_home %>% filter(CUR_TOTAL < 700000 & CUR_TOTAL > 0 & Parcel_ndvi_Sum < 90000 & Parcel_canopy_Sum < 100000)
bc_apt <- participant_greenness %>% filter(bc.desc == "Apartment")
bc_apt_filtered <- bc_apt %>% filter(Parcel_ndvi_Sum < 90000)
bc_own <- participant_greenness %>% filter(rentown_parcel == "Own" & CUR_TOTAL > 0)
bc_own_filtered <- bc_own %>% filter(Parcel_ndvi_Sum < 50000)
bc_rent <- participant_greenness %>% filter(rentown_parcel == "Rent")
bc_rent_filtered <- bc_rent %>% filter(Parcel_ndvi_Sum < 8000)
bc_homeown <- bc_home_filtered %>% filter(rentown_parcel == "Own")
bc_homerent <- bc_home_filtered %>% filter(rentown_parcel == "Rent")
bc_nonhomeown <- subset(participant_greenness, !(stid %in% bc_homeown$stid))
black_pop <- participant_greenness %>% filter(race.desc == "Black")
white_pop <- participant_greenness %>% filter(race.desc == "White")
young_pop <- participant_greenness %>% filter(age < 65)
old_pop <- participant_greenness %>% filter(age >= 65)
low_svi <- participant_greenness %>% filter(SPL_THEMES_cat == "Low")
high_svi <- participant_greenness %>% filter(SPL_THEMES_cat == "High")


modelx <- lm(Participant_300m_Mean_ndvi ~inc.desc+edu.desc+
               race.desc+gend.desc+NEAR_DIST_MajorRoads+PopDen, 
                  data = participant_greenness,)
modely <- lm(Participant_300m_Mean_ndvi ~inc.desc+edu.desc+
               race.desc+NEAR_DIST_MajorRoads+hznum+medu.desc+CUR_TOTAL,
             data = pg_for_lm)
model_test <- lm(Participant_200m_Mean_ndvi ~inc.desc,
             data = participant_greenness)
coef(model_test)
confint(model_test)
colnames_green <- colnames(participant_greenness)
colnames_green <-  colnames_green[346:510]
setwd("I:/Backups/GIS/Local_Computer_Stuff/GIS/models/no_interactions_ses_adj_svi_agerace_nonhomeown")
sesvar <- "svi"
population <- "nonhomeown"
resultdf = data.frame(a=1:10)
lapply(colnames_green,
       
       function(var) {
         #  ~ inc.desc+edu.desc+age+race.desc+gend.desc+NEAR_DIST_MajorRoads
         # subset= rentown.desc=="Rent"
         formula <- as.formula(paste(var, " ~ SPL_THEMES+age+race.desc"))
         model1 <- glm(formula, data = bc_nonhomeown)
         conf1 <- confint(model1)
         write.csv(tidy(model1), paste0(var,"_", sesvar, "_", population, ".csv"))
         write.csv(conf1, paste0(var,"_", sesvar, "_", population, "_confint.csv"))
         write.csv(beta(model1, x=FALSE, y=TRUE)$coefficients, paste0(var,"_", sesvar, "_", population, "_standardz.csv"))
         # col1 <- paste0(var, "_estimate")
         # colnames(resultdf) <- col1
         # resultdf[, col1] <- NA
         # resultdf[, col1] <- tidy(model1)$estimate
         # toselect.x <- summary(model1)$coeff[-1,4] < 0.05
         toselect.x <- subset(tidy(model1), p.value < 0.05)
         # select sig. variables
         # relevant.x <- names(toselect.x)[toselect.x == TRUE] 
         # write.csv(relevant.x, paste0(var, "_selected.csv"))
         write.csv(toselect.x, paste0(var, "_", sesvar, "_", population, "_selected.csv"))
         # formula with only sig variables
         # model2 <- as.formula(paste(var, " ~ ",paste(relevant.x, collapse= "+"))) 
         # summary(model2)$coeff[-1,4] < 0.05
       })


############################################################
---Table 6 block group level

library(dplyr)
library(MASS)
library(broom)
library(pscl)
library(safejoin)
library(tidyverse)

# Grab the data
ghbg <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/bg_in_GH.csv")
svibg <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/participant_data/BG_SVI.csv")
bgresndvi <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/bgresidential_NDVIdata_20210609.csv")
bgresndvi$bgresndvi <- bgresndvi$Participant_5m_Mean_NDVI
bgrescanopy <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/bgresidential_canopydata_20210825.csv")
bgrescanopy$bgrescanopy <- bgrescanopy$Participant_5m_Mean_canopy
bgcanopy <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/BG_canopydata_20210825.csv")
bgcanopy$bgcanopy <- bgcanopy$BG_5m_Mean_canopy
bgndvi <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/BG_NDVIdata_20210825.csv")
bgndvi$bgndvi <- bgndvi$BG_5m_Mean_NDVI
bgroads <- read.csv("I:/Backups/GIS/Local_Computer_Stuff/GIS/GH/bg_roads.csv")

bgroads[is.na(bgroads)] <- 0

ghbg <- safe_left_join(ghbg, bgresndvi, 
                          by = c("FIPS" = "FIPS"),
                          check = "", conflict =  coalesce)
ghbg <- safe_left_join(ghbg, bgrescanopy, 
                       by = c("FIPS" = "FIPS"),
                       check = "", conflict =  coalesce)
ghbg <- safe_left_join(ghbg, bgndvi, 
                       by = c("FIPS" = "FIPS"),
                       check = "", conflict =  coalesce)
ghbg <- safe_left_join(ghbg, bgcanopy, 
                       by = c("FIPS" = "FIPS"),
                       check = "", conflict =  coalesce)

ghbg <- safe_left_join(ghbg, svibg, 
                       by = c("FIPS" = "GEOID"),
                       check = "", conflict =  coalesce)

ghbg <- safe_left_join(ghbg, bgroads, 
                       by = c("FIPS" = "FIPS"),
                       check = "", conflict =  coalesce)
ghbg <- ghbg %>%
  mutate(SPL_THEMES_cat = ntile(SPL_THEMES, 2)) %>%
  mutate(SPL_THEMES_cat = if_else(SPL_THEMES_cat == 1, 'Low', 'High')) %>%
  mutate(SPL_THEMES_cat = factor(SPL_THEMES_cat) %>% fct_relevel(c("Low", "High")))



ghbg <- ghbg %>%
  mutate(hsgrad_sum = dplyr::select(., 24:32) %>% rowSums(na.rm = TRUE)) %>%
  mutate(hsgrad_pct = hsgrad_sum/Total1*100) %>%
  mutate(unemployed = Civilian_Labor_Force__Unemplo1/Total__Employment_1*100) %>%
  mutate(minority_sum = Estimate__Total__Black_or_Afric+Hispanic_or_Latino) %>%
  mutate(minority_pct = minority_sum/Total_Population*100) %>%
  mutate(age = Estimate__Median_age_____Total) %>%
  mutate(roadlength = SUM_Shape_Length)
# FOR ALL JC
bglevel_model <- lm(Participant_5m_Mean_NDVI ~ hsgrad_pct+unemployed+Median_HH_income+F__Renter_Occupied_Household+PopDen+age+minority_pct+roadlength, data=ghbg)
car::vif(bglevel_model)
# hs_grad _pct is so left skewed, no power is helping this situation
# removing and re-running
bglevel_model <- lm(Participant_5m_Mean_NDVI ~ log(unemployed+0.0001)+Median_HH_income+F__Renter_Occupied_Household+PopDen+age+minority_pct+roadlength, data=ghbg)
# 72 0's: should we even log transform? 
# let's try sqrt
bglevel_model <- lm(Participant_5m_Mean_NDVI ~ sqrt(unemployed)+Median_HH_+F__Renter_Occupied_Household+PopDen+age+minority_pct+roadlength, data=ghbg)
# the univariate distribution wasn't great for sqrt, really
# to stick with log + 0.001
# now for median hh income
bglevel_model <- lm(Participant_5m_Mean_NDVI ~ log(unemployed+0.0001)+log(Median_HH_income+0.0001)+F__Renter_Occupied_Household+PopDen+age+minority_pct+roadlength, data=ghbg)
# unable to take the root power of F_Renter
bglevel_model <- lm(Participant_5m_Mean_NDVI ~ log(unemployed+0.0001)+log(Median_HH_income+0.0001)+F__Renter_Occupied_Household+log(PopDen)+age+minority_pct+log(roadlength), data=ghbg)
# we're getting minority as sign again and again
# but we're dealing with potentially collinear minority_pct which is also badly skewed
bglevel_model <- lm(Participant_5m_Mean_NDVI ~ log(unemployed+0.0001)+log(Median_HH_income+0.0001)+F__Renter_Occupied_Household+log(PopDen)+age+log(roadlength), data=ghbg)
# if we remove it, we get age significant
# let's put it back in and take out renters (remember, renters was also a skewed set)
bglevel_model <- lm(Participant_5m_Mean_NDVI ~ log(unemployed+0.0001)+log(Median_HH_income+0.0001)+log(PopDen)+age+minority_pct+log(roadlength), data=ghbg)
# minority just becomes more significant
# still, our R squared is pretty bad. I wouldn't count on this.
bglevel_model <- lm(Participant_5m_Mean_NDVI ~ hsgrad_pct+age+FREQUENCY, data=ghbg)
bglevel_model <- lm(bgcanopy ~ SPL_THEMES, data=ghbg)
bglevel_model <- gam(Participant_5m_Mean_NDVI ~ s(SPL_THEMES), data=ghbg)

bglevel_model <- lm(Participant_5m_Mean_NDVI ~ Median_HH_income, data=ghbg)


summary(bglevel_model)
gam.check(bglevel_model)
#Below two are similar looking
ggplot(ghbg, aes(SPL_THEMES_cat, Participant_5m_Mean_NDVI)) + geom_point() + 
  geom_smooth(method = "gam", formula = y ~s(x))
ggplot(participant_greenness, aes(SPL_THEMES_cat, Participant_200m_Mean_ndvi)) + geom_point() + 
  geom_smooth(method = "gam", formula = y ~s(x))


boxcox(bglevel_model)
ggplot(bglevel)  + 
  geom_point(aes(x = minority_pct, y = Participant_5m_Mean_NDVI)) +
  geom_density2d(aes(x = minority_pct, y = Participant_5m_Mean_NDVI))



#NDVI outcome, all covariates
bglevel_model <- lm(Participant_5m_Mean_NDVI ~ hsgrad_pct+log(unemployed+0.0001)+Median_HH_income+
                      F__Renter_Occupied_Household+PopDen+age+minority_pct+log(roadlength+0.0001), data=ghbg)
#NDVI outcome, select covariates
# hs grad is somewhat collinear, so let's get rid of that
bglevel_model <- lm(Participant_5m_Mean_NDVI ~ Median_HH_income+
                      F__Renter_Occupied_Household+PopDen+age+minority_pct, data=ghbg)
write.csv(tidy(bglevel_model), "C:/Users/a0uppa01/University of Louisville/Envirome Institute members_group - General/GIS/GreenHeart/DataOutputsandDeliverables/SES Paper/table4_incomeoutcome_selectcov.csv")
car::vif(bglevel_model)
#Income as outcome, all covariates minus hsgrad_pct
bglevel_model <- lm(Median_HH_income ~ log(unemployed+0.0001)+Participant_5m_Mean_NDVI+
                      F__Renter_Occupied_Household+PopDen+age+minority_pct+log(roadlength+0.0001), data=ghbg)
# Income as outcome, selected covariates
bglevel_model <- lm(Median_HH_income ~ Participant_5m_Mean_NDVI+
                      F__Renter_Occupied_Household+PopDen+age+minority_pct, data=ghbg)
summary(bglevel_model)


         
############################################################

ALL_CORR

## pick the useless columns to get rid of
sapply(participant_greenness, function(x) sum(is.na(x)))
drop <- c("Field", "FocalStatistics_OutRaster_Full7inNDVI052620500m", "stid",
          "USER_Home_Address", "OBJECTID_1", "X", "Y", "SubjectID", "ObjectID",
          "Subject_ID", "Home_Address", "Study_ID", "AndreaCanopyPercFocal500m052920",
          "AndreaCanopyPercFocal400m060320", "AndreaCanopyPercFocal300m052920",
          "AndreaCanopyPercFocal100m060320", "AndreaCanopyPercFocalTest50m052920c",
          "ImperviousyPercFocal500m060320", "ImperviousyPercFocal300m060320",
          "ImperviousyPercFocal50m060320", "ParcelID_biomass", "FIPS_biomass",
          "ParcelID_ndvi", "FIPS_ndvi", "ParcelID_leafarea", "FIPS_leafarea",
          "ParcelID_LAI", "FIPS_LAI", "MEAN_12", "ParcelID_NDVI_L19", 
          "FIPS_NDVI_L19", "Event_Name", "OBJECTID", "ghKDE20mLeafArea",
          "ghKDE20mLAI", "ghKDE20mBiomass", "ghKDE20mBiomass_1", "ghKDE50mBiomass",
          "ghKDE50mLeafArea", "ghKDE50mLAI", "ghKDE500mLeafArea", "ghKDE500mLAI",
          "ghKDE500mBiomass", "HealParcelsNDVI061520", 
          "FocalStatistics_OutRaster_Full7inNDVI05262050m", 
          "FocalStatistics_OutRaster_Full7inNDVI042020100m",
          "FocalStatistics_OutRaster_Full7inNDVI042020200m",
          "FocalStatistics_OutRaster_Full7inNDVI042020300m",
          "HEALLessVisbParcelNDVI061520b", "HEALMoreVisbParcelNDVI061520b",
          "HEALLessVisbParcelNDVI061520b_1","HEALMoreVisbParcelNDVI061520b_1",
          "NEAREST_MAJORROAD_FID")
pg_for_corr = participant_greenness[,!(names(participant_greenness) %in% drop)]
## creates an unadjusted corr table and outputs wherever you choose in "write.csv"
pg_corr = corrP(pg_for_corr,parallel = TRUE, n.cores = 4, p.value = 0.05)
corrplot::corrplot(pg_corr)
corrgram::corrgram(pg_corr)
pgH = rh_corrP(df=pg_for_corr,corrmat=pg_corr,cutoff=0.5)
write.csv(pg_corr, "C:/Users/a0uppa01/University of Louisville/Envirome Institute members_group - General/GIS/GreenHeart/DataOutputsandDeliverables/all_correlations.csv")

-------SUBSET CORR
pg_for_corr_local = pg_for_corr %>% select(-starts_with("Participant_20m"), 
                                             -starts_with("Parcel_"),
                                             -starts_with("Nobuilding_"),
                                             -starts_with("lessvisible_"),
                                             -starts_with("morevisible_"))
pg_corr_local = corrP(pg_for_corr_local,parallel = TRUE, n.cores = 4, p.value = 0.05)
corrplot::corrplot(pg_corr_local)
corrgram::corrgram(pg_corr_local)
write.csv(pg_corr_local, "C:/Users/a0uppa01/University of Louisville/Envirome Institute members_group - General/GIS/GreenHeart/DataOutputsandDeliverables/all_correlations_local.csv")


pg_for_corr_personal = pg_for_corr %>% select(-contains("00m_"), 
                                          -contains("50m_"),
                                          -starts_with("Blockgroup_"))
pg_corr_personal = corrP(pg_for_corr_personal,parallel = TRUE, n.cores = 4, p.value = 0.05)
corrplot::corrplot(pg_corr_personal)
corrgram::corrgram(pg_corr_personal)
write.csv(pg_corr_personal, "C:/Users/a0uppa01/University of Louisville/Envirome Institute members_group - General/GIS/GreenHeart/DataOutputsandDeliverables/all_correlations_personal.csv")
